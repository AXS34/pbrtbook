# preface
@article{10.1093/comjnl/27.2.97,
  author   = {Knuth, Donald Ervin},
  title    = {Literate Programming},
  journal  = {The Computer Journal},
  volume   = {27},
  number   = {2},
  pages    = {97-111},
  year     = {1984},
  month    = {01},
  abstract = {{The author and his associates have been experimenting for the past several years with a programming language and documentation system called WEB. This paper presents WEB by example, and discusses why the new system appears to be an improvement over previous ones.}},
  issn     = {0010-4620},
  doi      = {10.1093/comjnl/27.2.97},
  url      = {https://doi.org/10.1093/comjnl/27.2.97},
  eprint   = {https://academic.oup.com/comjnl/article-pdf/27/2/97/981657/270097.pdf}
}

@book{10.5555/536126,
  author    = {Knuth, Donald Ervin},
  title     = {Metafont: The Program},
  year      = {1986},
  isbn      = {0201134381},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address   = {USA},
  edition   = {1st}
}

@book{10.5555/536123,
  author    = {Knuth, Donald Ervin},
  title     = {TEX: The Program},
  year      = {1986},
  isbn      = {0201134373},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address   = {USA}
}

@book{10.1145/164984,
  author    = {Knuth, Donald Ervin},
  title     = {The Stanford GraphBase: A Platform for Combinatorial Computing},
  year      = {1993},
  isbn      = {0201542757},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@book{10.5555/555424,
  author    = {Fraser, Christopher W. and Hanson, David R.},
  title     = {A  Retargetable C Compiler: Design and Implementation},
  year      = {1995},
  isbn      = {0805316701},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address   = {USA},
  abstract  = {From the Publisher:This new text examines the design and implementation of Icc, a production-quality, retargetable compiler, designed at AT&amp;T Bell Laboratories and Princeton University for the ANSI C programming language. The authors' innovative approach - a "literate program" that intermingles the text with the source code - gives a detailed tour of the code that explains the implementation and design decisions reflected in the software. And while most books describe toy compilers or focus on isolated pieces of code, the authors have made available the entire source code for a real compiler. Structured as a self-study guide that describes the real-world tradeoffs encountered in building a production-quality compiler, A Retargetable C Compiler is also useful to individuals who work in application areas using or creating language-based tools and techniques. Features: discusses the implementation and design tradeoffs made while constructing a real ANSI C compiler, illustrating the interaction between theory and practice; covers compiler theory only as needed to understand the implementation of Icc, focusing instead on practical, applied issues; encourages a deeper understanding of programming in C, by providing C programmers with a tour of the language from the perspective of compiler authors; includes coverage of code generators for the MIPS R3000, SPARC, and Intel 386 and its successors; and provides access to the full source code for the Icc compiler, the three back ends, and the code-generator generator, either on disk or via FTP.}
}

@book{10.5555/1036653,
  author    = {Ruckert, Martin},
  title     = {Understanding MP3},
  year      = {2005},
  isbn      = {3528059052},
  publisher = {Friedr. Vieweg \& Sohn Verlag/GWV Fachverlage GmbH},
  address   = {Wiesbaden, Germany}
}

#prefaceonline
@book{4b212a02-105c-42a2-ad5c-91c16a06e815,
  author    = {Ström, Jakob O and Åström, Karl and Akenine-Möller, Tomas},
  isbn      = {978-91-637-9354-7},
  language  = {eng},
  publisher = {ImmersiveMath},
  title     = {Immersive Linear Algebra},
  url       = {http://immersivemath.com/ila/},
  year      = {2015}
}

#chapter01
@article{10.1007/BF02684409,
  author     = {Szirmay-Kalos, L. and M\'{a}rton, G.},
  title      = {Worst-Case versus Average Case Complexity of Ray-Shooting},
  year       = {1998},
  issue_date = {1998},
  publisher  = {Springer-Verlag},
  address    = {Berlin, Heidelberg},
  volume     = {61},
  number     = {2},
  issn       = {0010-485X},
  url        = {https://doi.org/10.1007/BF02684409},
  doi        = {10.1007/BF02684409},
  journal    = {Computing},
  month      = oct,
  pages      = {103–131},
  numpages   = {29},
  keywords   = {complexity, ray-shooting, computational geometry, stochastic analysis}
}

@article{10.1145/358876.358882,
  author     = {Whitted, Turner},
  title      = {An Improved Illumination Model for Shaded Display},
  year       = {1980},
  issue_date = {June 1980},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {23},
  number     = {6},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/358876.358882},
  doi        = {10.1145/358876.358882},
  abstract   = {To accurately render a two-dimensional image of a three-dimensional scene, global illumination information that affects the intensity of each pixel of the image must be known at the time the intensity is calculated. In a simplified form, this information is stored in a tree of “rays” extending from the viewer to the first surface encountered and from there to other surfaces and to the light sources. A visible surface algorithm creates this tree for each pixel of the display and passes it to the shader. The shader then traverses the tree to determine the intensity of the light received by the viewer. Consideration of all of these factors allows the shader to accurately simulate true reflection, shadows, and refraction, as well as the effects simulated by conventional shaders. Anti-aliasing is included as an integral part of the visibility calculations. Surfaces displayed include curved as well as polygonal surfaces.},
  journal    = {Commun. ACM},
  month      = jun,
  pages      = {343–349},
  numpages   = {7},
  keywords   = {computer animation, visible surface algorithms, computer graphics, shading, raster displays}
}